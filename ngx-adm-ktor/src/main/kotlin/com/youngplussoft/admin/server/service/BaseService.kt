package com.youngplussoft.admin.server.service

import com.youngplussoft.admin.exception.YpsBadRequestException
import com.youngplussoft.admin.exception.YpsSessionNotFoundException
import com.youngplussoft.admin.server.jpa.common.repository.Querydsl4RepositorySupport

open class BaseService<T>(val repository: Querydsl4RepositorySupport<T>) {

    @Throws(Exception::class)
    fun get(id: String): T {
        val entity: T = repository.findById(id) ?: throw YpsSessionNotFoundException(null, "User Not Found")
        return entity
    }

    @Throws(Exception::class)
    fun getList(offset: Long=0, limit: Long=300): List<T> {
        return repository.findAll(offset, limit)
    }

    @Throws(Exception::class)
    fun update(entity: T): T {
        repository.transaction {
            repository.update(entity)
        }
        return entity
    }


    @Throws(Exception::class)
    fun save(entity: T, enableAutoGeneratedId: Boolean=true): T {
        repository.transaction {
            repository.insert(entity, false)
        }
        return entity
    }

    @Throws(Exception::class)
    fun delete(id: String): T {
        val entity = repository.findById(id) ?: throw YpsBadRequestException(null, "Entity Not Found")
        repository.transaction {
            repository.delete(entity)
        }
        return entity
    }
}

app {
  main {
    start = "보리 서버 앱 시작...{}"
    stop = "보리 서버 앱 종료...{}"
    timer {
      scheduleError = "내부 타이머 스케줄 작업 에러발생...\n"
    }
    userPush {
      sessionSize = "사용자 푸쉬 세션 갯수 : {}"
    }
  }
  websocket {
    install = "웹소켓 설치"
    close = "웹소켓 onClose"
    error = "웹소켓 onError"
  }
  pushServer {
    join = "푸쉬 사용자 가입"
    close = "푸쉬 사용자 웹소캣 Close"
    left = "푸쉬 사용자 가입 해제"
    broadcastStart = "푸쉬 메세지 broadcast 시작"
    broadcast = " 푸쉬 메세지 broadcast 완료 {}"
  }
  kafka {
    consumer {
      name = "카프카(Kafka) 컨슈머"
      record = "토픽(topic) = {}, 파티션(partition) = {}, 옵셋(offset) = {}, 키(key) = {}, 값(value) = {}"
      finish = "컨슈머 작업 완료"
      wakeup = "컨슈머 기상(wakeup)"
      pollingFail = "컨슈머 폴링 실패"
      closed = "컨슈머 연결 해제(close) 성공"
      jobClose = "컨슈머 작업 해제(close)"
      jobClosed = "컨슈머 작업 정상 종료"
      unknownRecord = "알 수 없는 레코드가 수신되었습니다."
      commit {
        sync = "컨슈머 커밋 수행"
        success = "컨슈머 커밋 성공 offsets : {}"
        fail = "컨슈머 커밋 실패 offsets : "
      }
    }
  }
  background {
    close = "백그라운드 작업 {} 해재"
    closed = "백그라운드 작업 {} 해재 완료"
  }
}